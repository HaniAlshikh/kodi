name: Build

on:
  push:
    branches:
      - development
  pull_request:
    types: [opened, reopened, synchronize]

env:
  RELEASE: repo
  REPO_FOLDER: repository.hs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: build
        run: python3 _repo_generator.py

      - name: Commit build files
        if: github.ref == 'refs/heads/development' && startsWith(github.ref, 'refs/tags/') == false
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ format('[Automated build] {0}', github.event.head_commit.message) }}

  draft-release:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Update draft
        id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release version
        run: echo ${{ steps.release-drafter.tag_name }} > release-version.txt

      - name: Upload release version
        uses: actions/upload-artifact@v2
        with:
          name: release-version
          path: release-version.txt

  version-check:
    needs: draft-release
    if: github.ref == 'refs/heads/development'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download draft release version
        uses: actions/download-artifact@v2
        with:
          name: release-version

      - name: Check version match
        run:
          sudo apt-get install xmlstarlet
          current=$(xml sel -t -v '/addon/@version' repo/repository.hs/addon.xml)
          expected=$(cat release-version.txt)
          [ $current != $expected ] && exit 1

  tag-and-release:
    needs: version-check
    if: github.ref == 'refs/heads/development'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish draft
        id: releaser
        uses: release-drafter/release-drafter@v5
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove v from tag
        env:
          V_TAG: ${{ steps.releaser.outputs.upload_url }}
        run: echo "TAG=$(echo ${V_TAG:1})" > $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.releaser.outputs.upload_url }}
          asset_path: ${{ env.RELEASE }}/zips/${{ env.REPO_FOLDER }}/${{ env.REPO_FOLDER}}-${{ env.TAG }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
