name: Build

on:
  push:
    branches:
      - development

env:
  RELEASE: repo
  REPO_FOLDER: repository.hs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: build
        run: python3 _repo_generator.py

      - name: Commit build files
        if: startsWith(github.ref, 'refs/tags/') == false
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ format('[Automated build] {0}', github.event.head_commit.message) }}

  draft-release:
    runs-on: ubuntu-latest

    steps:
      - name: Update draft
        id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get draft version
        run: echo ${{ steps.release-drafter.outputs.tag_name }} > draft-version.txt

      - name: Upload draft version
        uses: actions/upload-artifact@v2
        with:
          name: draft-version
          path: draft-version.txt

  version-check:
    needs: draft-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download draft release version
        uses: actions/download-artifact@v2
        with:
          name: draft-version

      - name: Check version match
        run: ./.github/scripts/version_checker.sh

  tag-and-release:
    needs: [build, version-check]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'development'

      - name: Publish draft
        id: releaser
        uses: release-drafter/release-drafter@v5
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove v from tag
        env:
          V_TAG: ${{ steps.releaser.outputs.tag_name }}
        run: echo "TAG=$(echo ${V_TAG:1})" > $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.releaser.outputs.upload_url }}
          asset_path: ${{ env.RELEASE }}/zips/${{ env.REPO_FOLDER }}/${{ env.REPO_FOLDER}}-${{ env.TAG }}.zip
          asset_name: ${{ env.REPO_FOLDER}}-${{ env.TAG }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prep to deploy
        run: |
          mkdir -p packages
          cp ${{ env.RELEASE }}/zips/${{ env.REPO_FOLDER }}/${{ env.REPO_FOLDER}}-${{ env.TAG }}.zip \
          packages/${{ env.REPO_FOLDER}}.zip

      - name: Deploy release
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: repo
          publish_dir: ./packages
          destination_dir: packages
          enable_jekyll: false
          keep_files: true
